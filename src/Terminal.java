/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Michel
 */
import com.fazecast.jSerialComm.SerialPort;
import com.fazecast.jSerialComm.SerialPortDataListener;
import com.fazecast.jSerialComm.SerialPortEvent;
import java.awt.Color;
import java.awt.Font;
import java.io.IOException;
import java.io.OutputStream;
import java.nio.charset.StandardCharsets;

public class Terminal extends javax.swing.JFrame {

    /**
     * Creates new form Terminal
     */
    SerialPort portComm;
    OutputStream outputStream;

    public Terminal() {

        initComponents();
        SerialPort[] ports = SerialPort.getCommPorts();
        portSelection.removeAllItems();
        for (SerialPort p : ports) {

            portSelection.addItem(p.getSystemPortName());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        portSelection = new javax.swing.JComboBox<>();
        btnConnexion = new javax.swing.JButton();
        textEmission = new javax.swing.JTextField();
        titreTransmission = new javax.swing.JLabel();
        btnEnvoi = new javax.swing.JButton();
        titreReception = new javax.swing.JLabel();
        texteReception = new javax.swing.JTextField();
        infoText = new javax.swing.JLabel();
        btnDeconnexion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        portSelection.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        portSelection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "COM1", "COM2", "COM3", "COM4" }));
        portSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portSelectionActionPerformed(evt);
            }
        });

        btnConnexion.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnConnexion.setText("Connexion");
        btnConnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnexionActionPerformed(evt);
            }
        });

        textEmission.setText("jTextField1");

        titreTransmission.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        titreTransmission.setText("Transmission");

        btnEnvoi.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnEnvoi.setText("Envoyer");
        btnEnvoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnvoiActionPerformed(evt);
            }
        });

        titreReception.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        titreReception.setText("Reception");

        texteReception.setText("jTextField1");

        infoText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        infoText.setText("Aucune connexion en cours");

        btnDeconnexion.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDeconnexion.setText("DÃ©connexion");
        btnDeconnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeconnexionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 181, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(titreReception)
                                    .addComponent(titreTransmission)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(textEmission, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnEnvoi)))
                                .addGap(198, 198, 198))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(texteReception, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDeconnexion))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnConnexion))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(infoText, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(portSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(portSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(infoText, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnConnexion, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(titreTransmission)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEnvoi, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(textEmission))
                .addGap(18, 18, 18)
                .addComponent(titreReception)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(texteReception, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                    .addComponent(btnDeconnexion, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnexionActionPerformed

        System.out.println("Terminal.btnConnexionActionPerformed()");
        try {
            SerialPort[] ports = SerialPort.getCommPorts();
            portComm = ports[portSelection.getSelectedIndex()];
            portComm.setBaudRate(9600);
            portComm.setNumDataBits(8);
            portComm.setParity(0);
            portComm.setNumStopBits(1);
            portComm.openPort();

            if (portComm.isOpen()) {

                infoText.setForeground(Color.BLUE);
                infoText.setText("Connexion rÃ©ussie");

            } else {

                infoText.setForeground(Color.red);
                infoText.setText("Tentative de connexion Ã©chouÃ©e");

            }

        } catch (Exception e) {

            infoText.setForeground(Color.red);
            infoText.setText("Connexion Ã©chouÃ©e");

        }

        portComm.addDataListener(new SerialPortDataListener() {
            @Override
            public int getListeningEvents() {
                return SerialPort.LISTENING_EVENT_DATA_AVAILABLE;
            }

            @Override
            public void serialEvent(SerialPortEvent event) {
                if (event.getEventType() != SerialPort.LISTENING_EVENT_DATA_AVAILABLE) {
                    return;
                }
                byte[] newData = new byte[portComm.bytesAvailable()];
                int numRead = portComm.readBytes(newData, newData.length);
                System.out.println("Read " + numRead + " bytes:" + new String(newData, StandardCharsets.UTF_8));
                texteReception.setText(new String(newData, StandardCharsets.UTF_8));
            }
        });

    }//GEN-LAST:event_btnConnexionActionPerformed

    private void portSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portSelectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_portSelectionActionPerformed

    private void btnEnvoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnvoiActionPerformed

        outputStream = portComm.getOutputStream();
        String dataToSend = textEmission.getText();
        try {

            outputStream.write(dataToSend.getBytes());

        } catch (IOException e) {

            infoText.setForeground(Color.red);
            infoText.setText("Erreur de transmission");

        }

    }//GEN-LAST:event_btnEnvoiActionPerformed

    private void btnDeconnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeconnexionActionPerformed

        portComm.closePort();
        infoText.setForeground(Color.red);
        infoText.setText("Fermeture communication");
    }//GEN-LAST:event_btnDeconnexionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Terminal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Terminal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Terminal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Terminal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Terminal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConnexion;
    private javax.swing.JButton btnDeconnexion;
    private javax.swing.JButton btnEnvoi;
    private javax.swing.JLabel infoText;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> portSelection;
    private javax.swing.JTextField textEmission;
    private javax.swing.JTextField texteReception;
    private javax.swing.JLabel titreReception;
    private javax.swing.JLabel titreTransmission;
    // End of variables declaration//GEN-END:variables
}
